 // single linked list 
#include <stdio.h>
#include<stdlib.h>
struct node {
    int data;
    struct node *next;
};
struct node * createanode(int value){
    struct node* newnode=(struct node*)malloc(sizeof(struct node));
    newnode->data=value;
    newnode->next=NULL;
    return newnode;
}
void insertatfirst(struct node** head,int value){
    struct node* newnode=createanode(value);
    newnode->next=*head;
    *head=newnode;
}
void insertatend(struct node** head,int value){
    struct node* newnode=createanode(value);
    if((*head)==NULL){
        *head=newnode;
        return ;
    }
    struct node* temp=*head;
    while(temp->next!=NULL){
        temp=temp->next;
    }
    temp->next=newnode;
}
void insertatposition(struct node** head,int value,int pos){
    struct node* newnode=(struct node*)malloc(sizeof(struct node));
    if(pos==0){
        insertatfirst(head,value);
        return;
    }
    struct node* temp=*head;
    for(int i=0;i<pos-1&&temp!=NULL;i++){
        temp=temp->next;
    }
    if(temp==NULL){
        printf("postion is not range\n");
        free(newnode);
        return ;
    }
    newnode->next=temp->next;
    temp->next=newnode;
}
void deleteatfirst(struct node** head){
    if(head==NULL){
        printf("list is empty\n");
        return ;
    }
    struct node* temp=*head;
    *head=temp->next;
    free(temp);
}
void deleteatend(struct node** head){
    if(*head==NULL){
        printf("List Is Empty\n");
        return;
    }
    struct node* temp= *head;
    if(temp->next==NULL){
        free(temp);
        *head=NULL;
        return ;
    }
    while(temp->next->next!=NULL){
        temp=temp->next;
    }
    free(temp->next);
    temp->next=NULL;
}
void deleteatposition(struct node** head,int pos){
    if((*head)==NULL){
        printf("List is empty\n");
        return ;
    }
    struct node* temp=*head;
    for(int i=0;i<pos-1&&temp!=NULL;i++){
        temp=temp->next;
    }
    if(temp==NULL||temp->next==NULL){
        printf("pos is out of range");
        return ;
    }
    struct node* next=temp->next->next;
    free(temp->next);
    temp->next=next;
}
void print(struct node* head){
    struct node* temp=head;
    while(temp!=NULL){
        printf("%d-",temp->data);
        temp=temp->next;
        }
        printf("Null\n");
}
int main() {
	// your code goes here
     struct node* head =NULL;
      insertatfirst(&head, 10);
    printf("Linked list after inserting the node:10 at the beginning \n");
    print(head); 
    
    printf("Linked list after inserting the node:20 at the end \n");
    insertatend(&head, 20);
    print(head); 
    
    printf("Linked list after inserting the node:5 at the end \n");
    insertatend(&head, 5);
    print(head); 
    
    printf("Linked list after inserting the node:30 at the end \n");
    insertatend(&head, 30);
    print(head); 
    
    printf("Linked list after inserting the node:15 at position 2 \n");
    insertatposition(&head, 15, 2);
    print(head);
    
    printf("Linked list after deleting the first node: \n");
    deleteatfirst(&head);
    print(head); 
    
    printf("Linked list after deleting the last node: \n");
    deleteatend(&head);
    print(head); 
    
    printf("Linked list after deleting the node at position 1: \n");
    deleteatposition(&head, 1);
    print(head); 
 return 0;
}

